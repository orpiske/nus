SET(N_VERSION 0.4.0)

IF (NOT NUS_INSTALL_DIR)
	SET(NUS_INSTALL_DIR $ENV{NUS_INSTALL_DIR})
	IF (NOT NUS_INSTALL_DIR) 
		IF (UNIX OR CYGWIN)
			SET(NUS_INSTALL_DIR "/usr/" CACHE STRING
				"NUS Installation Directory")
		ELSE (UNIX OR CYGWIN)
			IF (WIN32) 
				SET(NUS_INSTALL_DIR "c:/lib/nus-${N_VERSION}" CACHE STRING
					"NUS Installation Directory")
			ENDIF(WIN32)
		ENDIF(UNIX OR CYGWIN)
	ENDIF (NOT NUS_INSTALL_DIR) 
ENDIF (NOT NUS_INSTALL_DIR)

MESSAGE(STATUS "Found NUS installed in ${NUS_INSTALL_DIR}")

IF (UNIX OR CYGWIN)
	SET(NUS_OS_CODE_DIR unix)
	REMOVE_DEFINITIONS(-DNLIB_SHARED)
ELSE (UNIX OR CYGWIN)
	IF (WIN32) 
		SET(NUS_OS_CODE_DIR win32)
		REMOVE_DEFINITIONS(/DNLIB_SHARED)
	ENDIF(WIN32)
ENDIF(UNIX OR CYGWIN)

FIND_PATH(NUS_INCLUDE_DIR
	NAMES base/ndefs.h
	PATHS 
	${NUS_INSTALL_DIR}/include/nus
)

FIND_LIBRARY(NUS_BASE_LIBRARY
	NAMES nbase-${N_VERSION}
	PATHS 
	${NUS_INSTALL_DIR}/lib
)

IF(NOT NUS_INCLUDE_DIR) 
	MESSAGE(FATAL_ERROR "Unable to find NUS required headers: base")
ENDIF(NOT NUS_INCLUDE_DIR) 

IF(NOT NUS_BASE_LIBRARY) 
	MESSAGE(FATAL_ERROR "Unable to find NUS required library: base")
ENDIF(NOT NUS_BASE_LIBRARY)


INCLUDE_DIRECTORIES(
	${NUS_INCLUDE_DIR}/base
	${NUS_INCLUDE_DIR}/base/bio
	${NUS_INCLUDE_DIR}/base/exceptions
	${NUS_INCLUDE_DIR}/base/output
	${NUS_INCLUDE_DIR}/base/osal/${NUS_OS_CODE_DIR}
)

LINK_DIRECTORIES(
	${NUS_BASE_LIBRARY_DIR}
)

LINK_LIBRARIES(
	${NUS_BASE_LIBRARY}
)
